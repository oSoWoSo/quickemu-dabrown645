#!/usr/bin/bash

#   This template identifies the functions required to supported by each OS

# Use this function to override the standard function in quickget
# if you distribution requires something special. Windows and Mac are examples..
#function create_vm() {
#
#}

# This function returns an associative array with keys "url", "iso", and "hash"
# Change this function for your distro
function get_distro_info() {
    declare -A distro_info
    distro_info['url']="https://ant.seedhost.eu/arcolinux/iso"
    if [[ "${EDITION}" == "base" ]]; then
        distro_info['iso']="${RELEASE}/arcolinuxs-${RELEASE}-x86_64.iso"
    else
        distro_info['iso']="${RELEASE}/arcolinuxs-${EDITION}-${RELEASE}-x86_64.iso"
    fi
    distro_info['hash']="$(curl -s "${distro_info['url']}/${distro_info['iso']}.sha256" | cut -d' ' -f1)"

    for key in "${!distro_info[@]}"; do
        echo "${key}" "${distro_info[${key}]}"
    done
}

# Use this function to override the standard function in quickget
# if you distribution requires something special. Windows and Mac are examples..
#function get_file() {
#
#}

# This function returns supported OS releases for the OS
# Change this function for your distro
function releases() {
    echo v22.01.10 v22.03.07 v22.04.02 v22.05.02 v22.06.07 v22.07.03 v22.09.04 v22.10.02 v22.11.02 v22.12.02 v23.01.03 v23.02.02 v23.03.01 v23.04.03 v23.05.04 v23.06.02 v23.07.01 v23.09.03 v23.10.01 v23.11.03 v23.12.03 v24.01.04
}

# This function returns an associative array with releases as the key
# and a "!" separated string of valid editions for the specific release.
# While quite often editions are the same for all releases it is not always
# the case.
# Editions have different meanings for different OS's
# Change this function for your distro
function editions() {
    declare -A editions

    # Because of timing issues with getting the information directly from the website
    # like I didn for releases I have to hard code these or things time out and get messed up

    editions['v22.01.10']="base!lts"
    editions['v22.03.07']="base!lts"
    editions['v22.04.02']="base!lts"
    editions['v22.05.02']="base!lts"
    editions['v22.06.07']="base!lts"
    editions['v22.07.03']="base!lts"
    editions['v22.09.04']="base!lts"
    editions['v22.10.02']="base!lts"
    editions['v22.11.02']="base!lts!xanmod!zen"
    editions['v22.12.02']="base!lts!xanmod!zen"
    editions['v23.01.03']="base!lts!xanmod!zen"
    editions['v23.02.02']="base!lts!xanmod!zen"
    editions['v23.03.01']="base!lts!xanmod!zen"
    editions['v23.04.03']="base!lts!xanmod!zen"
    editions['v23.05.04']="base!lts!xanmod!zen"
    editions['v23.06.02']="base!lts!xanmod!zen"
    editions['v23.07.01']="base!lts!xanmod!zen"
    editions['v23.09.03']="base!lts!xanmod!zen"
    editions['v23.10.01']="base!lts!xanmod!zen"
    editions['v23.11.03']="base!lts!xanmod!zen"
    editions['v23.12.03']="base!lts!xanmod!zen"
    editions['v24.01.04']="base!lts!hardend!zen"
    editions['v24.02.01']="base!lts!hardend!zen"

    for key in "${!editions[@]}"; do
        echo "${key}" "${editions[${key}]}"
    done
}

# Change this function for your distro
# Returning 0 means editions are required and 1 not required
function editions_required() {
    return 0
}

# This function returns an expanded OS name for pretty printing
# Change this function for your distro
function pretty_name() {
    echo "Arco LinuxL"
}

# This function returns the OS's home page URL
# Change this function for your distro
function homepage() {
    echo "https://arcolinux.com/"
}

# This function creates the vm_config file and can be used to
# replace the default one in the quickget
# Change this function for your distro
function make_vm_config() {
    default_vm_config

    # Override any default settings
    # i.e sed -i 's/^disk_size=.*/disk_size=\"80G\"/' "${VM_PATH}".conf

    # Add any additional lines
    # {
    #     printf "fixed_iso=\"%s\"\n"   ${fixed_iso}
    #
    # } >> "${VM_PATH}.conf"
}
